<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>guru.sfg.brewery.eureka</groupId>
	<artifactId>mssc-brewery-eureka</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>mssc-brewery-eureka</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>11</java.version>
		<!-- relevant for spring-boot 2.3 -->
		<spring-cloud.version>Hoxton.SR3</spring-cloud.version>
		<docker.image.prefix>kgromov</docker.image.prefix>
		<docker.image.name>${project.artifactId}</docker.image.name>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
			<version>6.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>2020.0.3</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<layers>
						<enabled>true</enabled>
						<includeLayerTools>true</includeLayerTools>
					</layers>
					<!-- since 2.4: publishing image to own repository -->
					<image>
						<name>kgromov/${project.artifactId}</name>
						<publish>true</publish>
					</image>
					<docker>
						<publishRegistry>
							<username>kgromov</username>
							<password>Xthyjvjhtw1Jltccf</password>
							<url>https://hub.docker.com</url>
						</publishRegistry>
					</docker>
				</configuration>
				<!-- build-image starting since 2.3.1 -->
				<executions>
					<execution>
						<goals>
							<goal>build-image</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- fabric8 maven plugin -->
			<!--<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.33.0</version>
				<configuration>
					<verbose>true</verbose>
					<images>
						<image>
							<name>${docker.image.prefix}/${docker.image.name}</name>
							<alias>${project.artifactId}</alias>
							<build>
								&lt;!&ndash;copies artifact to docker build dir in target&ndash;&gt;
								<assembly>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
								&lt;!&ndash; Searches in src/main/docker by default &ndash;&gt;
								<dockerFile>Dockerfile</dockerFile>
								<tags>
									<tag>latest</tag>
								</tags>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>-->
		</plugins>
	</build>

</project>
